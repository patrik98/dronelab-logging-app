stages:
  - test
  - build
  - deploy

pytest:
  stage: test
  image: python:3.8
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - venv/
  before_script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r app/requirements.txt --extra-index-url https://__token__:$DB_LIB_API_TOKEN@gitlab.web.fh-kufstein.ac.at/api/v4/projects/4223/packages/pypi/simple
    - cp tests/* -r app
    - rm -rf tests
  script:
    - python -m unittest discover app -v
  artifacts:
    when: always
  tags:
    - docker

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --build-arg "GITLAB_TOKEN=$DB_LIB_API_TOKEN"
      --destination "${CI_REGISTRY_IMAGE}:latest"
  tags:
    - docker
  only:
    - master

deploy:
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker-compose down && docker-compose pull && docker-compose up -d
  tags:
    - deployment
  only:
    - master
